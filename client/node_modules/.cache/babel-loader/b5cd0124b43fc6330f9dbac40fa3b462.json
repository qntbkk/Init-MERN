{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Labs\\\\TNL-BRE\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Labs\\\\TNL-BRE\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { ADD_POST, GET_POSTS, GET_POST, DELETE_POST, POST_LOADING } from '../actions/types';\nvar initialState = {\n  posts: [],\n  post: {},\n  loading: false\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case POST_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case GET_POSTS:\n      return _objectSpread({}, state, {\n        posts: action.payload,\n        loading: false\n      });\n\n    case GET_POST:\n      return _objectSpread({}, state, {\n        post: action.payload,\n        loading: false\n      });\n\n    case ADD_POST:\n      return _objectSpread({}, state, {\n        posts: [action.payload].concat(_toConsumableArray(state.posts))\n      });\n\n    case DELETE_POST:\n      return _objectSpread({}, state, {\n        posts: state.posts.filter(function (post) {\n          return post._id !== action.payload;\n        })\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:\\Labs\\TNL-BRE\\client\\src\\reducers\\postReducer.js"],"names":["ADD_POST","GET_POSTS","GET_POST","DELETE_POST","POST_LOADING","initialState","posts","post","loading","state","action","type","payload","filter","_id"],"mappings":";;AAAA,SACEA,QADF,EAEEC,SAFF,EAGEC,QAHF,EAIEC,WAJF,EAKEC,YALF,QAMO,kBANP;AAQA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB;AAMA,eAAe,YAAuC;AAAA,MAA9BC,KAA8B,uEAAtBJ,YAAsB;AAAA,MAARK,MAAQ;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,YAAL;AACE,+BACKK,KADL;AAEED,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKP,SAAL;AACE,+BACKQ,KADL;AAEEH,QAAAA,KAAK,EAAEI,MAAM,CAACE,OAFhB;AAGEJ,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKN,QAAL;AACE,+BACKO,KADL;AAEEF,QAAAA,IAAI,EAAEG,MAAM,CAACE,OAFf;AAGEJ,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKR,QAAL;AACE,+BACKS,KADL;AAEEH,QAAAA,KAAK,GAAGI,MAAM,CAACE,OAAV,4BAAsBH,KAAK,CAACH,KAA5B;AAFP;;AAIF,SAAKH,WAAL;AACE,+BACKM,KADL;AAEEH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmB,UAAAN,IAAI;AAAA,iBAAIA,IAAI,CAACO,GAAL,KAAaJ,MAAM,CAACE,OAAxB;AAAA,SAAvB;AAFT;;AAIF;AACE,aAAOH,KAAP;AA7BJ;AA+BD","sourcesContent":["import {\r\n  ADD_POST,\r\n  GET_POSTS,\r\n  GET_POST,\r\n  DELETE_POST,\r\n  POST_LOADING\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: {},\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case POST_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: action.payload,\r\n        loading: false\r\n      };\r\n    case GET_POST:\r\n      return {\r\n        ...state,\r\n        post: action.payload,\r\n        loading: false\r\n      };\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [action.payload, ...state.posts]\r\n      };\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(post => post._id !== action.payload)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}